#### Lighttpd-1.5.x configuration file for SymbolicWeb
######################################################



#### General server setup
#########################

var.basedir = env.HOME + "/www-root"
server.tag = "SW"
server.port = 80
server.use-ipv6 = "disable"
server.network-backend = "gthread-aio"
#server.use-noatime = "enable" http://redmine.lighttpd.net/issues/1203
server.event-handler = "linux-sysepoll"
server.max-stat-threads = 2
server.max-read-threads = 2
# FAM support is gone in latest 1.5.x. (confirmed via stbuehler on #lighttpd)
#server.stat-cache-engine = "fam"
dir-listing.encoding = "utf-8"
#dir-listing.activate = "enable"
index-file.names = ( "index.html" )
server.document-root = basedir + "/www"
server.pid-file = basedir + "/lighttpd/lighttpd.pid"
# Seems Lighttpd (really) only supports a single error log.
server.errorlog = basedir + "/lighttpd/log/generic-error.log"



### Connection handling (long polling)
######################################

var.sw_max_connections = 30000
# LHD will set server.max-fds for us.
server.max-connections = sw_max_connections
server.max-keep-alive-idle = 35 # Must be larger than -COMET-TIMEOUT- on SW end.



### mod_redirect
################

server.modules += ("mod_redirect")

## HTTP to HTTPS

$HTTP["scheme"] == "http" {
  $HTTP["host"] =~ ".*" {
    url.redirect = (".*" => "https://%0$0")
  }
}



### mod_expires: static content
###############################

server.modules += ("mod_expire")

$HTTP["url"] =~ "^/static/" {
  server.document-root = basedir + "/www/" # the URL already has /static/ in it so this will be correct.
  expire.url = ("" => "access plus 1 months")
}



### mod_proxy_core: dynamic content
###################################

server.modules += ("mod_proxy_core", "mod_proxy_backend_http")
#proxy-core.allow-x-sendfile = "enable"

$HTTP["url"] !~ "^/static/" {
  proxy-core.protocol = "http"
  proxy-core.backends = ("127.0.0.1:7070")
  proxy-core.max-pool-size = sw_max_connections
  proxy-core.max-keep-alive-requests = sw_max_connections
}



### mod_deflate: static and dynamic compression
###############################################

server.modules += ("mod_deflate")
deflate.enabled = "enable"
deflate.compression-level = 9
deflate.mem-level = 9
deflate.window-size = 15
deflate.allowed_encodings = ("bzip2", "gzip", "deflate")
deflate.min-compress-size = 200
#deflate.output-buffer-size = 8192
deflate.work-block-size = 512
deflate.mimetypes = ("text/plain; charset=UTF-8",
                     "text/html; charset=UTF-8",
                     "text/javascript; charset=UTF-8",
                     "text/css; charset=UTF-8",
                     "text/xml; charset=UTF-8",
                     "application/json; charset=UTF-8",
                     "text/plain; charset=utf-8",
                     "text/html; charset=utf-8",
                     "text/javascript; charset=utf-8",
                     "text/css; charset=utf-8",
                     "text/xml; charset=utf-8",
                     "application/json; charset=utf-8")




### Mime-types (Content-Type)
#############################

mimetype.assign             = (
  ".pdf"          =>      "application/pdf",
  ".sig"          =>      "application/pgp-signature",
  ".spl"          =>      "application/futuresplash",
  ".class"        =>      "application/octet-stream",
  ".ps"           =>      "application/postscript",
  ".torrent"      =>      "application/x-bittorrent",
  ".dvi"          =>      "application/x-dvi",
  ".gz"           =>      "application/x-gzip",
  ".pac"          =>      "application/x-ns-proxy-autoconfig",
  ".swf"          =>      "application/x-shockwave-flash",
  ".tar.gz"       =>      "application/x-tgz",
  ".tgz"          =>      "application/x-tgz",
  ".tar"          =>      "application/x-tar",
  ".zip"          =>      "application/zip",
  ".mp3"          =>      "audio/mpeg",
  ".m3u"          =>      "audio/x-mpegurl",
  ".wma"          =>      "audio/x-ms-wma",
  ".wax"          =>      "audio/x-ms-wax",
  ".ogg"          =>      "application/ogg",
  ".ogv"          =>      "video/ogg",
  ".wav"          =>      "audio/x-wav",
  ".gif"          =>      "image/gif",
  ".jar"          =>      "application/x-java-archive",
  ".jpg"          =>      "image/jpeg",
  ".jpeg"         =>      "image/jpeg",
  ".png"          =>      "image/png",
  ".xbm"          =>      "image/x-xbitmap",
  ".xpm"          =>      "image/x-xpixmap",
  ".xwd"          =>      "image/x-xwindowdump",
  ".css"          =>      "text/css; charset=utf-8",
  ".html"         =>      "text/html; charset=utf-8",
  ".htm"          =>      "text/html; charset=utf-8",
  ".js"           =>      "text/javascript; charset=utf-8",
  ".asc"          =>      "text/plain; charset=utf-8",
  ".c"            =>      "text/plain; charset=utf-8",
  ".cpp"          =>      "text/plain; charset=utf-8",
  ".log"          =>      "text/plain; charset=utf-8",
  ".conf"         =>      "text/plain; charset=utf-8",
  ".text"         =>      "text/plain; charset=utf-8",
  ".txt"          =>      "text/plain; charset=utf-8",
  ".dtd"          =>      "text/xml; charset=utf-8",
  ".xml"          =>      "text/xml; charset=utf-8",
  ".mpeg"         =>      "video/mpeg",
  ".mpg"          =>      "video/mpeg",
  ".mov"          =>      "video/quicktime",
  ".qt"           =>      "video/quicktime",
  ".avi"          =>      "video/x-msvideo",
  ".asf"          =>      "video/x-ms-asf",
  ".asx"          =>      "video/x-ms-asf",
  ".wmv"          =>      "video/x-ms-wmv",
  ".bz2"          =>      "application/x-bzip",
  ".tbz"          =>      "application/x-bzip-compressed-tar",
  ".tar.bz2"      =>      "application/x-bzip-compressed-tar",
  # TODO: Temporary fix until this stuff is standardized; check console log when changing/removing this.
  ".ttf"          =>      "font/ttf",
  ".webm"         =>      "video/webm",
  ".mp4"          =>      "video/mp4",
  ""              =>      "text/plain; charset=utf-8"
 )
